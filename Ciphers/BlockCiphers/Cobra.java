package Ciphers.BlockCiphers;

import Ciphers.Utils.BitUtil;

class Cobra extends BlockCipher {
    private final int[] KEY_SIZES = new int[]{1, 72};
    private Cobra_algorithm COBRA_A;

    Cobra() {
        COBRA_A = new Cobra_algorithm();
        super.algorithm = COBRA_A;
        super.PossibleKeySizes = KEY_SIZES;
        super.KeySize = 72;
        super.IV_Size = 16;
    }

    @Override
    public void setKey(byte[] key) {
        if (key == null || (key.length < KEY_SIZES[0] || key.length > KEY_SIZES[1]))
            throw new BlockCipherException(BlockCipherException.KEY_LEN_MANY, "from 8 up to 576 (%8 = 0)", "from 1 up to 72");
        byte[] IV_save = COBRA_A == null ? null : COBRA_A.IV;
        COBRA_A = new Cobra_algorithm(key);
        COBRA_A.IV = IV_save;
        super.algorithm = COBRA_A;
    }

    private class Cobra_algorithm extends BlockCipher.BlockCipherAlgorithm {

        private int[][] P_BOX = new int[12][3];
        private int[][] S1 = new int[4][256];
        private int[][] S2 = new int[4][256];
        private int[][] S3 = new int[4][256];
        private int[][] W_BOX = new int[2][4];

        Cobra_algorithm() {
            super.blocksize = 16;
        }


        Cobra_algorithm(byte[] key) {
            super.blocksize = 16;
            generateBoxData(key);
        }

        @Override
        byte[] encryptInECB(byte[] input) {
            if (input.length % blocksize != 0)
                throw new BlockCipherException(BlockCipherException.DATA_LEN, blocksize * 8, blocksize);
            int[] encrypted = BitUtil.ByteArrays.byteArrayToIntArray(input.clone());
            for (int k = 0; k < encrypted.length; k += 4) {
                int[] chuck_32 = new int[4];
                System.arraycopy(encrypted, k, chuck_32, 0, 4);
                int A = chuck_32[0];
                int B = chuck_32[1];
                int C = chuck_32[2];
                int D = chuck_32[3];
                A ^= W_BOX[0][0];
                B ^= W_BOX[0][1];
                C ^= W_BOX[0][2];
                D ^= W_BOX[0][3];

                for (int i = 0; i < 12; i++) {
                    int A_s = A;
                    int B_s = B;
                    int C_s = C;
                    int D_s = D;
                    D = A_s;

                    C = F(D, P_BOX[i][2], S3);
                    C ^= D_s;
                    C = BitUtil.Rotation.rotateR(C, 1);

                    B = F(C, P_BOX[i][1], S2);
                    B ^= C_s;
                    B = BitUtil.Rotation.rotateR(B, 1);

                    A = F(B, P_BOX[i][0], S1);
                    A ^= B_s;
                    A = BitUtil.Rotation.rotateR(A, 1);
                }
                A ^= W_BOX[1][0];
                B ^= W_BOX[1][1];
                C ^= W_BOX[1][2];
                D ^= W_BOX[1][3];
                System.arraycopy(new int[]{A, B, C, D}, 0, encrypted, k, 4);
            }

            return BitUtil.ByteArrays.intArrayToByteArray(encrypted);
        }

        @Override
        byte[] decryptInECB(byte[] input) {
            if (input.length % blocksize != 0)
                throw new BlockCipherException(BlockCipherException.DATA_LEN, blocksize * 8, blocksize);
            int[] decrypted = BitUtil.ByteArrays.byteArrayToIntArray(input.clone());
            for (int k = 0; k < decrypted.length; k += 4) {
                int[] chuck_32 = new int[4];
                System.arraycopy(decrypted, k, chuck_32, 0, 4);
                int A = chuck_32[0];
                int B = chuck_32[1];
                int C = chuck_32[2];
                int D = chuck_32[3];
                A ^= W_BOX[1][0];
                B ^= W_BOX[1][1];
                C ^= W_BOX[1][2];
                D ^= W_BOX[1][3];

                for (int i = 11; i >= 0; i--) {
                    int A_s = A;
                    int B_s = B;
                    int C_s = C;
                    int D_s = D;
                    A = D_s;

                    B = F(B_s, P_BOX[i][0], S1);
                    B ^= BitUtil.Rotation.rotateL(A_s, 1);

                    C = F(C_s, P_BOX[i][1], S2);
                    C ^= BitUtil.Rotation.rotateL(B_s, 1);

                    D = F(D_s, P_BOX[i][2], S3);
                    D ^= BitUtil.Rotation.rotateL(C_s, 1);
                }
                A ^= W_BOX[0][0];
                B ^= W_BOX[0][1];
                C ^= W_BOX[0][2];
                D ^= W_BOX[0][3];
                System.arraycopy(new int[]{A, B, C, D}, 0, decrypted, k, 4);
            }

            return BitUtil.ByteArrays.intArrayToByteArray(decrypted);
        }

        private void generateBoxData(byte[] key) {
            if (key.length != 72) {
                byte[] key_72 = new byte[72];
                System.arraycopy(key, 0, key_72, 0, key.length);
                key = key_72;
            }
            int[] key_32 = BitUtil.ByteArrays.byteArrayToIntArray(key);

            int i, j, k = 0;
            for (j = 0; j < 12; j++) {
                for (i = 0; i < 3; i++)
                    P_BOX[j][i] = S[k++];
            }

            for (j = 0; j < 4; j++) {
                for (i = 0; i < 256; i++)
                    S1[j][i] = S[k++];
            }

            for (j = 0; j < 4; j++) {
                for (i = 0; i < 256; i++)
                    S2[j][i] = S[k++];
            }

            for (j = 0; j < 4; j++) {
                for (i = 0; i < 256; i++)
                    S3[j][i] = S[k++];
            }

            for (j = 0; j < 2; j++) {
                for (i = 0; i < 4; i++)
                    W_BOX[j][i] = S[k++];
            }


            int K_cntr = 0;
            int BUFFER = 0;
            for (j = 0; j < 12; j++) {
                for (i = 0; i < 3; i++) {
                    for (k = 0, BUFFER = 0; k < 4; k++) {
                        if (K_cntr >= 18) K_cntr = 0;
                        BUFFER = (BUFFER << 8) | (key_32[K_cntr++] & 0xff);
                    }

                    P_BOX[j][i] ^= BUFFER;
                }

            }


            for (j = 0; j < 4; j++) {
                for (i = 0; i < 256; i++) {
                    for (k = 0; k < 4; k++) {
                        if (K_cntr >= 18) K_cntr = 0;
                        BUFFER = (BUFFER << 8) | (key_32[K_cntr++] & 0xff);
                    }
                    S1[j][i] ^= BUFFER;
                }
            }


            for (j = 0; j < 4; j++) {
                for (i = 0; i < 256; i++) {
                    for (k = 0; k < 4; k++) {
                        if (K_cntr >= 18) K_cntr = 0;
                        BUFFER = (BUFFER << 8) | (key_32[K_cntr++] & 0xff);
                    }

                    S2[j][i] ^= BUFFER;
                }
            }
            for (j = 0; j < 4; j++) {
                for (i = 0; i < 256; i++) {
                    for (k = 0; k < 4; k++) {
                        if (K_cntr >= 18) K_cntr = 0;
                        BUFFER = (BUFFER << 8) | (key_32[K_cntr++] & 0xff);
                    }

                    S3[j][i] ^= BUFFER;
                }

            }


            for (int l = 0; l < 2; l++) {
                int[] loopArray = new int[4];
                loopArray[0] = 0x0000000;
                loopArray[1] = 0x0000000;
                loopArray[2] = 0x0000000;
                loopArray[3] = 0x0000000;
                for (int N = 0; N < 12; ) {
                    loopArray = BitUtil.ByteArrays.byteArrayToIntArray(encryptInECB(BitUtil.ByteArrays.intArrayToByteArray(loopArray)));
                    for (int m = 0; m < 3; m++) {
                        P_BOX[N][m] = loopArray[m];
                    }
                    P_BOX[N++][0] = loopArray[3];
                }


                for (int N = 0, m = 0; N < 4; ) {
                    loopArray = BitUtil.ByteArrays.byteArrayToIntArray(encryptInECB(BitUtil.ByteArrays.intArrayToByteArray(loopArray)));
                    S1[N][m++] = loopArray[0];
                    S1[N][m++] = loopArray[1];
                    S1[N][m++] = loopArray[2];
                    S1[N][m++] = loopArray[3];
                    if (m == 256) {
                        m = 0;
                        N++;
                    }
                }

                for (int N = 0, m = 0; N < 4; ) {
                    loopArray = BitUtil.ByteArrays.byteArrayToIntArray(encryptInECB(BitUtil.ByteArrays.intArrayToByteArray(loopArray)));
                    S2[N][m++] = loopArray[0];
                    S2[N][m++] = loopArray[1];
                    S2[N][m++] = loopArray[2];
                    S2[N][m++] = loopArray[3];
                    if (m == 256) {
                        m = 0;
                        N++;
                    }
                }

                for (int N = 0, m = 0; N < 4; ) {
                    loopArray = BitUtil.ByteArrays.byteArrayToIntArray(encryptInECB(BitUtil.ByteArrays.intArrayToByteArray(loopArray)));
                    S3[N][m++] = loopArray[0];
                    S3[N][m++] = loopArray[1];
                    S3[N][m++] = loopArray[2];
                    S3[N][m++] = loopArray[3];
                    if (m == 256) {
                        m = 0;
                        N++;
                    }
                }

                for (int N = 0, m = 0; N < 2; N++) {
                    loopArray = BitUtil.ByteArrays.byteArrayToIntArray(encryptInECB(BitUtil.ByteArrays.intArrayToByteArray(loopArray)));
                    W_BOX[N][m++] = loopArray[0];
                    W_BOX[N][m++] = loopArray[1];
                    W_BOX[N][m++] = loopArray[2];
                    W_BOX[N][m++] = loopArray[3];
                    m = 0;
                }

                if (l == 0) {
                    K_cntr = 0;
                    BUFFER = 0;
                    for (j = 0; j < 12; j++) {
                        for (i = 0; i < 3; i++) {
                            for (k = 0, BUFFER = 0; k < 4; k++) {
                                if (K_cntr >= 18) K_cntr = 0;
                                BUFFER = (BUFFER << 8) | (key_32[K_cntr++] & 0xff);
                            }

                            P_BOX[j][i] ^= BUFFER;
                        }


                    }


                }
            }
        }

        private int F(int y, int p, int[][] S) {
            int t = y ^ p;
            return ((S[0][(t >> 24) & 0xff] +
                    S[1][(t >> 16) & 0xff]) ^
                    S[2][(t >> 8) & 0xff]) +
                    S[3][t & 0xff];
        }
    }


    //S-box
    private final int[] S = new int[]{
            0X243F6A88, 0X85A308D3, 0X13198A2E, 0X03707344, 0XA4093822, 0X299F31D0,
            0X082EFA98, 0XEC4E6C89, 0X452821E6, 0X38D01377, 0XBE5466CF, 0X34E90C6C,
            0XC0AC29B7, 0XC97C50DD, 0X3F84D5B5, 0XB5470917, 0X9216D5D9, 0X8979FB1B,
            0XD1310BA6, 0X98DFB5AC, 0X2FFD72DB, 0XD01ADFB7, 0XB8E1AFED, 0X6A267E96,
            0XBA7C9045, 0XF12C7F99, 0X24A19947, 0XB3916CF7, 0X0801F2E2, 0X858EFC16,
            0X636920D8, 0X71574E69, 0XA458FEA3, 0XF4933D7E, 0X0D95748F, 0X728EB658,
            0X718BCD58, 0X82154AEE, 0X7B54A41D, 0XC25A59B5, 0X9C30D539, 0X2AF26013,
            0XC5D1B023, 0X286085F0, 0XCA417918, 0XB8DB38EF, 0X8E79DCB0, 0X603A180E,
            0X6C9E0E8B, 0XB01E8A3E, 0XD71577C1, 0XBD314B27, 0X78AF2FDA, 0X55605C60,
            0XE65525F3, 0XAA55AB94, 0X57489862, 0X63E81440, 0X55CA396A, 0X2AAB10B6,
            0XB4CC5C34, 0X1141E8CE, 0XA15486AF, 0X7C72E993, 0XB3EE1411, 0X636FBC2A,
            0X2BA9C55D, 0X741831F6, 0XCE5C3E16, 0X9B87931E, 0XAFD6BA33, 0X6C24CF5C,
            0X7A325381, 0X28958677, 0X3B8F4898, 0X6B4BB9AF, 0XC4BFE81B, 0X66282193,
            0X61D809CC, 0XFB21A991, 0X487CAC60, 0X5DEC8032, 0XEF845D5D, 0XE98575B1,
            0XDC262302, 0XEB651B88, 0X23893E81, 0XD396ACC5, 0X0F6D6FF3, 0X83F44239,
            0X2E0B4482, 0XA4842004, 0X69C8F04A, 0X9E1F9B5E, 0X21C66842, 0XF6E96C9A,
            0X670C9C61, 0XABD388F0, 0X6A51A0D2, 0XD8542F68, 0X960FA728, 0XAB5133A3,
            0X6EEF0B6C, 0X137A3BE4, 0XBA3BF050, 0X7EFB2A98, 0XA1F1651D, 0X39AF0176,
            0X66CA593E, 0X82430E88, 0X8CEE8619, 0X456F9FB4, 0X7D84A5C3, 0X3B8B5EBE,
            0XE06F75D8, 0X85C12073, 0X401A449F, 0X56C16AA6, 0X4ED3AA62, 0X363F7706,
            0X1BFEDF72, 0X429B023D, 0X37D0D724, 0XD00A1248, 0XDB0FEAD3, 0X49F1C09B,
            0X075372C9, 0X80991B7B, 0X25D479D8, 0XF6E8DEF7, 0XE3FE501A, 0XB6794C3B,
            0X976CE0BD, 0X04C006BA, 0XC1A94FB6, 0X409F60C4, 0X5E5C9EC2, 0X196A2463,
            0X68FB6FAF, 0X3E6C53B5, 0X1339B2EB, 0X3B52EC6F, 0X6DFC511F, 0X9B30952C,
            0XCC814544, 0XAF5EBD09, 0XBEE3D004, 0XDE334AFD, 0X660F2807, 0X192E4BB3,
            0XC0CBA857, 0X45C8740F, 0XD20B5F39, 0XB9D3FBDB, 0X5579C0BD, 0X1A60320A,
            0XD6A100C6, 0X402C7279, 0X679F25FE, 0XFB1FA3CC, 0X8EA5E9F8, 0XDB3222F8,
            0X3C7516DF, 0XFD616B15, 0X2F501EC8, 0XAD0552AB, 0X323DB5FA, 0XFD238760,
            0X53317B48, 0X3E00DF82, 0X9E5C57BB, 0XCA6F8CA0, 0X1A87562E, 0XDF1769DB,
            0XD542A8F6, 0X287EFFC3, 0XAC6732C6, 0X8C4F5573, 0X695B27B0, 0XBBCA58C8,
            0XE1FFA35D, 0XB8F011A0, 0X10FA3D98, 0XFD2183B8, 0X4AFCB56C, 0X2DD1D35B,
            0X9A53E479, 0XB6F84565, 0XD28E49BC, 0X4BFB9790, 0XE1DDF2DA, 0XA4CB7E33,
            0X62FB1341, 0XCEE4C6E8, 0XEF20CADA, 0X36774C01, 0XD07E9EFE, 0X2BF11FB4,
            0X95DBDA4D, 0XAE909198, 0XEAAD8E71, 0X6B93D5A0, 0XD08ED1D0, 0XAFC725E0,
            0X8E3C5B2F, 0X8E7594B7, 0X8FF6E2FB, 0XF2122B64, 0X8888B812, 0X900DF01C,
            0X4FAD5EA0, 0X688FC31C, 0XD1CFF191, 0XB3A8C1AD, 0X2F2F2218, 0XBE0E1777,
            0XEA752DFE, 0X8B021FA1, 0XE5A0CC0F, 0XB56F74E8, 0X18ACF3D6, 0XCE89E299,
            0XB4A84FE0, 0XFD13E0B7, 0X7CC43B81, 0XD2ADA8D9, 0X165FA266, 0X80957705,
            0X93CC7314, 0X211A1477, 0XE6AD2065, 0X77B5FA86, 0XC75442F5, 0XFB9D35CF,
            0XEBCDAF0C, 0X7B3E89A0, 0XD6411BD3, 0XAE1E7E49, 0X00250E2D, 0X2071B35E,
            0X226800BB, 0X57B8E0AF, 0X2464369B, 0XF009B91E, 0X5563911D, 0X59DFA6AA,
            0X78C14389, 0XD95A537F, 0X207D5BA2, 0X02E5B9C5, 0X83260376, 0X6295CFA9,
            0X11C81968, 0X4E734A41, 0XB3472DCA, 0X7B14A94A, 0X1B510052, 0X9A532915,
            0XD60F573F, 0XBC9BC6E4, 0X2B60A476, 0X81E67400, 0X08BA6FB5, 0X571BE91F,
            0XF296EC6B, 0X2A0DD915, 0XB6636521, 0XE7B9F9B6, 0XFF34052E, 0XC5855664,
            0X53B02D5D, 0XA99F8FA1, 0X08BA4799, 0X6E85076A, 0X4B7A70E9, 0XB5B32944,
            0XDB75092E, 0XC4192623, 0XAD6EA6B0, 0X49A7DF7D, 0X9CEE60B8, 0X8FEDB266,
            0XECAA8C71, 0X699A17FF, 0X5664526C, 0XC2B19EE1, 0X193602A5, 0X75094C29,
            0XA0591340, 0XE4183A3E, 0X3F54989A, 0X5B429D65, 0X6B8FE4D6, 0X99F73FD6,
            0XA1D29C07, 0XEFE830F5, 0X4D2D38E6, 0XF0255DC1, 0X4CDD2086, 0X8470EB26,
            0X6382E9C6, 0X021ECC5E, 0X09686B3F, 0X3EBAEFC9, 0X3C971814, 0X6B6A70A1,
            0X687F3584, 0X52A0E286, 0XB79C5305, 0XAA500737, 0X3E07841C, 0X7FDEAE5C,
            0X8E7D44EC, 0X5716F2B8, 0XB03ADA37, 0XF0500C0D, 0XF01C1F04, 0X0200B3FF,
            0XAE0CF51A, 0X3CB574B2, 0X25837A58, 0XDC0921BD, 0XD19113F9, 0X7CA92FF6,
            0X94324773, 0X22F54701, 0X3AE5E581, 0X37C2DADC, 0XC8B57634, 0X9AF3DDA7,
            0XA9446146, 0X0FD0030E, 0XECC8C73E, 0XA4751E41, 0XE238CD99, 0X3BEA0E2F,
            0X3280BBA1, 0X183EB331, 0X4E548B38, 0X4F6DB908, 0X6F420D03, 0XF60A04BF,
            0X2CB81290, 0X24977C79, 0X5679B072, 0XBCAF89AF, 0XDE9A771F, 0XD9930810,
            0XB38BAE12, 0XDCCF3F2E, 0X5512721F, 0X2E6B7124, 0X501ADDE6, 0X9F84CD87,
            0X7A584718, 0X7408DA17, 0XBC9F9ABC, 0XE94B7D8C, 0XEC7AEC3A, 0XDB851DFA,
            0X63094366, 0XC464C3D2, 0XEF1C1847, 0X3215D908, 0XDD433B37, 0X24C2BA16,
            0X12A14D43, 0X2A65C451, 0X50940002, 0X133AE4DD, 0X71DFF89E, 0X10314E55,
            0X81AC77D6, 0X5F11199B, 0X043556F1, 0XD7A3C76B, 0X3C11183B, 0X5924A509,
            0XF28FE6ED, 0X97F1FBFA, 0X9EBABF2C, 0X1E153C6E, 0X86E34570, 0XEAE96FB1,
            0X860E5E0A, 0X5A3E2AB3, 0X771FE71C, 0X4E3D06FA, 0X2965DCB9, 0X99E71D0F,
            0X803E89D6, 0X5266C825, 0X2E4CC978, 0X9C10B36A, 0XC6150EBA, 0X94E2EA78,
            0XA5FC3C53, 0X1E0A2DF4, 0XF2F74EA7, 0X361D2B3D, 0X1939260F, 0X19C27960,
            0X5223A708, 0XF71312B6, 0XEBADFE6E, 0XEAC31F66, 0XE3BC4595, 0XA67BC883,
            0XB17F37D1, 0X018CFF28, 0XC332DDEF, 0XBE6C5AA5, 0X65582185, 0X68AB9802,
            0XEECEA50F, 0XDB2F953B, 0X2AEF7DAD, 0X5B6E2F84, 0X1521B628, 0X29076170,
            0XECDD4775, 0X619F1510, 0X13CCA830, 0XEB61BD96, 0X0334FE1E, 0XAA0363CF,
            0XB5735C90, 0X4C70A239, 0XD59E9E0B, 0XCBAADE14, 0XEECC86BC, 0X60622CA7,
            0X9CAB5CAB, 0XB2F3846E, 0X648B1EAF, 0X19BDF0CA, 0XA02369B9, 0X655ABB50,
            0X40685A32, 0X3C2AB4B3, 0X319EE9D5, 0XC021B8F7, 0X9B540B19, 0X875FA099,
            0X95F7997E, 0X623D7DA8, 0XF837889A, 0X97E32D77, 0X11ED935F, 0X16681281,
            0X0E358829, 0XC7E61FD6, 0X96DEDFA1, 0X7858BA99, 0X57F584A5, 0X1B227263,
            0X9B83C3FF, 0X1AC24696, 0XCDB30AEB, 0X532E3054, 0X8FD948E4, 0X6DBC3128,
            0X58EBF2EF, 0X34C6FFEA, 0XFE28ED61, 0XEE7C3C73, 0X5D4A14D9, 0XE864B7E3,
            0X42105D14, 0X203E13E0, 0X45EEE2B6, 0XA3AAABEA, 0XDB6C4F15, 0XFACB4FD0,
            0XC742F442, 0XEF6ABBB5, 0X654F3B1D, 0X41CD2105, 0XD81E799E, 0X86854DC7,
            0XE44B476A, 0X3D816250, 0XCF62A1F2, 0X5B8D2646, 0XFC8883A0, 0XC1C7B6A3,
            0X7F1524C3, 0X69CB7492, 0X47848A0B, 0X5692B285, 0X095BBF00, 0XAD19489D,
            0X1462B174, 0X23820E00, 0X58428D2A, 0X0C55F5EA, 0X1DADF43E, 0X233F7061,
            0X3372F092, 0X8D937E41, 0XD65FECF1, 0X6C223BDB, 0X7CDE3759, 0XCBEE7460,
            0X4085F2A7, 0XCE77326E, 0XA6078084, 0X19F8509E, 0XE8EFD855, 0X61D99735,
            0XA969A7AA, 0XC50C06C2, 0X5A04ABFC, 0X800BCADC, 0X9E447A2E, 0XC3453484,
            0XFDD56705, 0X0E1E9EC9, 0XDB73DBD3, 0X105588CD, 0X675FDA79, 0XE3674340,
            0XC5C43465, 0X713E38D8, 0X3D28F89E, 0XF16DFF20, 0X153E21E7, 0X8FB03D4A,
            0XE6E39F2B, 0XDB83ADF7, 0XE93D5A68, 0X948140F7, 0XF64C261C, 0X94692934,
            0X411520F7, 0X7602D4F7, 0XBCF46B2E, 0XD4A20068, 0XD4082471, 0X3320F46A,
            0X43B7D4B7, 0X500061AF, 0X1E39F62E, 0X97244546, 0X14214F74, 0XBF8B8840,
            0X4D95FC1D, 0X96B591AF, 0X70F4DDD3, 0X66A02F45, 0XBFBC09EC, 0X03BD9785,
            0X7FAC6DD0, 0X31CB8504, 0X96EB27B3, 0X55FD3941, 0XDA2547E6, 0XABCA0A9A,
            0X28507825, 0X530429F4, 0X0A2C86DA, 0XE9B66DFB, 0X68DC1462, 0XD7486900,
            0X680EC0A4, 0X27A18DEE, 0X4F3FFEA2, 0XE887AD8C, 0XB58CE006, 0X7AF4D6B6,
            0XAACE1E7C, 0XD3375FEC, 0XCE78A399, 0X406B2A42, 0X20FE9E35, 0XD9F385B9,
            0XEE39D7AB, 0X3B124E8B, 0X1DC9FAF7, 0X4B6D1856, 0X26A36631, 0XEAE397B2,
            0X3A6EFA74, 0XDD5B4332, 0X6841E7F7, 0XCA7820FB, 0XFB0AF54E, 0XD8FEB397,
            0X454056AC, 0XBA489527, 0X55533A3A, 0X20838D87, 0XFE6BA9B7, 0XD096954B,
            0X55A867BC, 0XA1159A58, 0XCCA92963, 0X99E1DB33, 0XA62A4A56, 0X3F3125F9,
            0X5EF47E1C, 0X9029317C, 0XFDF8E802, 0X04272F70, 0X80BB155C, 0X05282CE3,
            0X95C11548, 0XE4C66D22, 0X48C1133F, 0XC70F86DC, 0X07F9C9EE, 0X41041F0F,
            0X404779A4, 0X5D886E17, 0X325F51EB, 0XD59BC0D1, 0XF2BCC18F, 0X41113564,
            0X257B7834, 0X602A9C60, 0XDFF8E8A3, 0X1F636C1B, 0X0E12B4C2, 0X02E1329E,
            0XAF664FD1, 0XCAD18115, 0X6B2395E0, 0X333E92E1, 0X3B240B62, 0XEEBEB922,
            0X85B2A20E, 0XE6BA0D99, 0XDE720C8C, 0X2DA2F728, 0XD0127845, 0X95B794FD,
            0X647D0862, 0XE7CCF5F0, 0X5449A36F, 0X877D48FA, 0XC39DFD27, 0XF33E8D1E,
            0X0A476341, 0X992EFF74, 0X3A6F6EAB, 0XF4F8FD37, 0XA812DC60, 0XA1EBDDF8,
            0X991BE14C, 0XDB6E6B0D, 0XC67B5510, 0X6D672C37, 0X2765D43B, 0XDCD0E804,
            0XF1290DC7, 0XCC00FFA3, 0XB5390F92, 0X690FED0B, 0X667B9FFB, 0XCEDB7D9C,
            0XA091CF0B, 0XD9155EA3, 0XBB132F88, 0X515BAD24, 0X7B9479BF, 0X763BD6EB,
            0X37392EB3, 0XCC115979, 0X8026E297, 0XF42E312D, 0X6842ADA7, 0XC66A2B3B,
            0X12754CCC, 0X782EF11C, 0X6A124237, 0XB79251E7, 0X06A1BBE6, 0X4BFB6350,
            0X1A6B1018, 0X11CAEDFA, 0X3D25BDD8, 0XE2E1C3C9, 0X44421659, 0X0A121386,
            0XD90CEC6E, 0XD5ABEA2A, 0X64AF674E, 0XDA86A85F, 0XBEBFE988, 0X64E4C3FE,
            0X9DBC8057, 0XF0F7C086, 0X60787BF8, 0X6003604D, 0XD1FD8346, 0XF6381FB0,
            0X7745AE04, 0XD736FCCC, 0X83426B33, 0XF01EAB71, 0XB0804187, 0X3C005E5F,
            0X77A057BE, 0XBDE8AE24, 0X55464299, 0XBF582E61, 0X4E58F48F, 0XF2DDFDA2,
            0XF474EF38, 0X8789BDC2, 0X5366F9C3, 0XC8B38E74, 0XB475F255, 0X46FCD9B9,
            0X7AEB2661, 0X8B1DDF84, 0X846A0E79, 0X915F95E2, 0X466E598E, 0X20B45770,
            0X8CD55591, 0XC902DE4C, 0XB90BACE1, 0XBB8205D0, 0X11A86248, 0X7574A99E,
            0XB77F19B6, 0XE0A9DC09, 0X662D09A1, 0XC4324633, 0XE85A1F02, 0X09F0BE8C,
            0X4A99A025, 0X1D6EFE10, 0X1AB93D1D, 0X0BA5A4DF, 0XA186F20F, 0X2868F169,
            0XDCB7DA83, 0X573906FE, 0XA1E2CE9B, 0X4FCD7F52, 0X50115E01, 0XA70683FA,
            0XA002B5C4, 0X0DE6D027, 0X9AF88C27, 0X773F8641, 0XC3604C06, 0X61A806B5,
            0XF0177A28, 0XC0F586E0, 0X006058AA, 0X30DC7D62, 0X11E69ED7, 0X2338EA63,
            0X53C2DD94, 0XC2C21634, 0XBBCBEE56, 0X90BCB6DE, 0XEBFC7DA1, 0XCE591D76,
            0X6F05E409, 0X4B7C0188, 0X39720A3D, 0X7C927C24, 0X86E3725F, 0X724D9DB9,
            0X1AC15BB4, 0XD39EB8FC, 0XED545578, 0X08FCA5B5, 0XD83D7CD3, 0X4DAD0FC4,
            0X1E50EF5E, 0XB161E6F8, 0XA28514D9, 0X6C51133C, 0X6FD5C7E7, 0X56E14EC4,
            0X362ABFCE, 0XDDC6C837, 0XD79A3234, 0X92638212, 0X670EFA8E, 0X406000E0,
            0X3A39CE37, 0XD3FAF5CF, 0XABC27737, 0X5AC52D1B, 0X5CB0679E, 0X4FA33742,
            0XD3822740, 0X99BC9BBE, 0XD5118E9D, 0XBF0F7315, 0XD62D1C7E, 0XC700C47B,
            0XB78C1B6B, 0X21A19045, 0XB26EB1BE, 0X6A366EB4, 0X5748AB2F, 0XBC946E79,
            0XC6A376D2, 0X6549C2C8, 0X530FF8EE, 0X468DDE7D, 0XD5730A1D, 0X4CD04DC6,
            0X2939BBDB, 0XA9BA4650, 0XAC9526E8, 0XBE5EE304, 0XA1FAD5F0, 0X6A2D519A,
            0X63EF8CE2, 0X9A86EE22, 0XC089C2B8, 0X43242EF6, 0XA51E03AA, 0X9CF2D0A4,
            0X83C061BA, 0X9BE96A4D, 0X8FE51550, 0XBA645BD6, 0X2826A2F9, 0XA73A3AE1,
            0X4BA99586, 0XEF5562E9, 0XC72FEFD3, 0XF752F7DA, 0X3F046F69, 0X77FA0A59,
            0X80E4A915, 0X87B08601, 0X9B09E6AD, 0X3B3EE593, 0XE990FD5A, 0X9E34D797,
            0X2CF0B7D9, 0X022B8B51, 0X96D5AC3A, 0X017DA67D, 0XD1CF3ED6, 0X7C7D2D28,
            0X1F9F25CF, 0XADF2B89B, 0X5AD6B472, 0X5A88F54C, 0XE029AC71, 0XE019A5E6,
            0X47B0ACFD, 0XED93FA9B, 0XE8D3C48D, 0X283B57CC, 0XF8D56629, 0X79132E28,
            0X785F0191, 0XED756055, 0XF7960E44, 0XE3D35E8C, 0X15056DD4, 0X88F46DBA,
            0X03A16125, 0X0564F0BD, 0XC3EB9E15, 0X3C9057A2, 0X97271AEC, 0XA93A072A,
            0X1B3F6D9B, 0X1E6321F5, 0XF59C66FB, 0X26DCF319, 0X7533D928, 0XB155FDF5,
            0X03563482, 0X8ABA3CBB, 0X28517711, 0XC20AD9F8, 0XABCC5167, 0XCCAD925F,
            0X4DE81751, 0X3830DC8E, 0X379D5862, 0X9320F991, 0XEA7A90C2, 0XFB3E7BCE,
            0X5121CE64, 0X774FBE32, 0XA8B6E37E, 0XC3293D46, 0X48DE5369, 0X6413E680,
            0XA2AE0810, 0XDD6DB224, 0X69852DFD, 0X09072166, 0XB39A460A, 0X6445C0DD,
            0X586CDECF, 0X1C20C8AE, 0X5BBEF7DD, 0X1B588D40, 0XCCD2017F, 0X6BB4E3BB,
            0XDDA26A7E, 0X3A59FF45, 0X3E350A44, 0XBCB4CDD5, 0X72EACEA8, 0XFA6484BB,
            0X8D6612AE, 0XBF3C6F47, 0XD29BE463, 0X542F5D9E, 0XAEC2771B, 0XF64E6370,
            0X740E0D8D, 0XE75B1357, 0XF8721671, 0XAF537D5D, 0X4040CB08, 0X4EB4E2CC,
            0X34D2466A, 0X0115AF84, 0XE1B00428, 0X95983A1D, 0X06B89FB4, 0XCE6EA048,
            0X6F3F3B82, 0X3520AB82, 0X011A1D4B, 0X277227F8, 0X611560B1, 0XE7933FDC,
            0XBB3A792B, 0X344525BD, 0XA08839E1, 0X51CE794B, 0X2F32C9B7, 0XA01FBAC9,
            0XE01CC87E, 0XBCC7D1F6, 0XCF0111C3, 0XA1E8AAC7, 0X1A908749, 0XD44FBD9A,
            0XD0DADECB, 0XD50ADA38, 0X0339C32A, 0XC6913667, 0X8DF9317C, 0XE0B12B4F,
            0XF79E59B7, 0X43F5BB3A, 0XF2D519FF, 0X27D9459C, 0XBF97222C, 0X15E6FC2A,
            0X0F91FC71, 0X9B941525, 0XFAE59361, 0XCEB69CEB, 0XC2A86459, 0X12BAA8D1,
            0XB6C1075E, 0XE3056A0C, 0X10D25065, 0XCB03A442, 0XE0EC6E0E, 0X1698DB3B,
            0X4C98A0BE, 0X3278E964, 0X9F1F9532, 0XE0D392DF, 0XD3A0342B, 0X8971F21E,
            0X1B0A7441, 0X4BA3348C, 0XC5BE7120, 0XC37632D8, 0XDF359F8D, 0X9B992F2E,
            0XE60B6F47, 0X0FE3F11D, 0XE54CDA54, 0X1EDAD891, 0XCE6279CF, 0XCD3E7E6F,
            0X1618B166, 0XFD2C1D05, 0X848FD2C5, 0XF6FB2299, 0XF523F357, 0XA6327623,
            0X93A83531, 0X56CCCD02, 0XACF08162, 0X5A75EBB5, 0X6E163697, 0X88D273CC,
            0XDE966292, 0X81B949D0, 0X4C50901B, 0X71C65614, 0XE6C6C7BD, 0X327A140A,
            0X45E1D006, 0XC3F27B9A, 0XC9AA53FD, 0X62A80F00, 0XBB25BFE2, 0X35BDD2F6,
            0X71126905, 0XB2040222, 0XB6CBCF7C, 0XCD769C2B, 0X53113EC0, 0X1640E3D3,
            0X38ABBD60, 0X2547ADF0, 0XBA38209C, 0XF746CE76, 0X77AFA1C5, 0X20756060,
            0X85CBFE4E, 0X8AE88DD8, 0X7AAAF9B0, 0X4CF9AA7E, 0X1948C25C, 0X02FB8A8C,
            0X01C36AE4, 0XD6EBE1F9, 0X90D4F869, 0XA65CDEA0, 0X3F09252D, 0XC208E69F,
            0XB74E6132, 0XCE77E25B, 0X578FDFE3, 0X3AC372E6, 0XB83ACB02, 0X2002397A,
            0X6EC6FB5B, 0XFFCFD4DD, 0X4CBF5ED1, 0XF43FE582, 0X3EF4E823, 0X2D152AF0,
            0XE718C970, 0X59BD9820, 0X1F4A9D62, 0XE7A529BA, 0X89E1248D, 0X3BF88656,
            0XC5114D0E, 0XBC4CEE16, 0X034D8A39, 0X20E47882, 0XE9AE8FBD, 0XE3ABDC1F,
            0X6DA51E52, 0X5DB2BAE1, 0X01F86E7A, 0X6D9C68A9, 0X2708FCD9, 0X293CBC0C,
            0XB03C86F8, 0XA8AD2C2F, 0X00424EEB, 0XCACB452D, 0X89CC71FC, 0XD59C7F91,
            0X7F0622BC, 0X6D8A08B1, 0X834D2132, 0X6884CA82, 0XE3AACBF3, 0X7786F2FA,
            0X2CAB6E3D, 0XCE535AD1, 0XF20AC607, 0XC6B8E14F, 0X5EB4388E, 0X775014A6,
            0X656665F7, 0XB64A43E4, 0XBA383D01, 0XB2E41079, 0X8EB2986F, 0X909E0CA4,
            0X1F7B3777, 0X2C126030, 0X85088718, 0XC4E7D1BD, 0X4065FFCE, 0X8392FD8A,
            0XAA36D12B, 0XB4C8C9D0, 0X994FB0B7, 0X14F96818, 0XF9A53998, 0XA0A178C6,
            0X2684A81E, 0X8AE972F6, 0XB8425EB6, 0X7A29D486, 0X551BD719, 0XAF32C189,
            0XD5145505, 0XDC81D53E, 0X48424EDA, 0XB796EF46, 0XA0498F03, 0X667DEEDE,
            0X03AC0AB3, 0XC497733D, 0X5316A891, 0X30A88FCC, 0X9604440A, 0XCEEB893A,
            0X7725B82B, 0X0E1EF69D, 0X302A5C8E, 0XE7B84DEF, 0X5A31B096, 0XC9EBF88D,
            0X512D788E, 0X7E4002EE, 0X87E02AF6, 0XC358A1BB, 0X02E8D7AF, 0XDF9FB0E7,
            0X790E942A, 0X3B3C1ABA, 0XC6FFA7AF, 0X9DF796F9, 0X321BB994, 0X0174A8A8,
            0XED22162C, 0XCFF1BB99, 0XDAA8D551, 0XA4D5E44B, 0XECDDE3EC, 0XA80DC509,
            0X0393EEF2, 0X72523D31, 0XD48E3A1C, 0X224EB65E, 0X6052C3A4, 0X2109C32F,
            0X052EE388, 0XED9F7EA9, 0X91C62F97, 0X77B55BA0, 0X150CBCA3, 0X3AEC6525,
            0XDF318383, 0X43A9CE26, 0X9362AD8B, 0X0134140B, 0X8DF5CF81, 0X1E9FF559,
            0X167F0564, 0X3812F4E0, 0X588A52B0, 0XCBB8E944, 0XEF5B16A3, 0X73C4EDA1,
            0X7DFCFEEA, 0XF54BCBBE, 0X8773E3D2, 0XC531DCD0, 0X55C46729, 0X52774F3A,
            0X57CA6BC0, 0X467D3A3B, 0X24778425, 0XB7991E9A, 0XDD825C26, 0XE452C8EE,
            0XFCACDE1E, 0X84833AF3, 0X61211D03, 0X1732C131, 0XCCADB247, 0XE606BE8C,
            0X712B39F1, 0X88B4EF39, 0X3A9FCDC5, 0XC5755169, 0X1FF6994F, 0X39829CB0,
            0X11016573, 0X3343CBEB, 0X61D3D0B4, 0X44F30AEF, 0XA8AE7375, 0X2A3A1C9D,
            0XB4B70914, 0XD6AB250C, 0X853B7328, 0X495F948F, 0XD2A4ED8E, 0X6CF751E4,
            0XC320BB75, 0XD9CAA0B3, 0X8BA56262, 0X4E84B03F, 0XEEA8076E, 0X74A07FE5,
            0X8039E00C, 0X36FFDAF8, 0X03731358, 0XB9E671B9, 0XDAC4CE1C, 0XB25B10ED,
            0X4DD3D5B1, 0XFCF2B480, 0X4634F579, 0X25EAC400, 0XA9AC55EA, 0X728932DF,
            0X06041D05, 0X5D31F502, 0XC539C2E3, 0X2B89D9DB, 0X5BCC0A98, 0XC05BFD6F,
            0X1B250622, 0X2E21BE0E, 0X60973B04, 0XECD54A67, 0XB54FE638, 0XA6ED6615,
            0X981A910A, 0X5D92928D, 0XAC6FC697, 0XE73C63AD, 0X456EDF5F, 0X457A8145,
            0X51875A64, 0XCD3099F1, 0X69B5F18A, 0X8C73EE0B, 0X5E57368F, 0X6C79F4BB,
            0X7A595926, 0XAAB49EC6, 0X8AC8FCFB, 0X8016CBDB, 0X8BBC1F47, 0X6982C711,
            0X85C7DA7A, 0X58811477, 0XCD67FAD1, 0XD764D9B4, 0XC8102950, 0X5CD09DA5,
            0X1BB1F147, 0X95167D80, 0X0367046D, 0XAF1DACA1, 0XA2247B23, 0X11301A54,
            0X791D99C6, 0X7A4FB7CF, 0X277449A4, 0X09E57492, 0X35C9A57E, 0X5E7F500A,
            0XB9A62A8A, 0XD5242A6B, 0XA1337859, 0X9CDA3346, 0X14874047, 0X4328BA08,
            0XEB81D51F, 0X3248896A, 0X8007D85D, 0X0F6E8DDA, 0X8250BDAF, 0XCE2EE042,
            0X897EE022, 0X5F003612, 0X3BA18F90, 0X26314076, 0X7824035A, 0X3B57E2D5,
            0X8E78AED1, 0XE90DC600, 0X90C15EA6, 0X24609519, 0XB72EC3F8, 0X663DDCEF,
            0XEF574232, 0X194195B6, 0X20C9203F, 0XF993700E, 0XC1A44A7C, 0XBAEDE941,
            0XF98AD4C4, 0XF8F43F26, 0XF060DD08, 0X0EB9DF1D, 0X9B336188, 0X55EEB734,
            0X6C56D0D4, 0X33A0D6E4, 0X182885B2, 0X1DAFB611, 0XF04D46F7, 0X50CDCB91,
            0X407B4733, 0XD7A2B343, 0X0269AC52, 0XB520773C, 0X8C910B9F, 0X7680E5F6,
            0XC79AD874, 0XFD97CFE6, 0XDEB78FB3, 0X279EE2A1, 0X74286705, 0X33645AA5,
            0X55443808, 0X4F1FC8DC, 0X116CC402, 0XD4F14617, 0X6183CD9E, 0XE11D5B9E,
            0X195D2523, 0XEF2F8E07, 0XD836767C, 0X44811938, 0XAD366C9F, 0XDAB0065B,
            0X2C5BD6F6, 0X63F7D10E, 0X79104BD1, 0XD7C3E497, 0X432DD056, 0X932F8F20,
            0X878025A7, 0X08E90347, 0XCDAC2120, 0X753A3201, 0X9C6BE1FD, 0X03F7B32B,
            0X0AB85150, 0XD75A8F1E, 0X8FBF70EC, 0XE0C67DF9, 0X71F250E4, 0X1ABB9BF0,
            0X3F17F108, 0XEDBFDC76, 0X37DCD54A, 0X48CCE570, 0X8011BB35, 0X8BC70BFB,
            0X8194F91B, 0XD0816B10, 0X5B3FE641, 0X5C6C5D42, 0X39D03AD6, 0X6881CC3B,
            0X95ED2BBA, 0X9B2DF677, 0X7DB8057E, 0X0E1A306A, 0X9C73B22B, 0X0F6FAE4C,
            0X1477324E, 0X85041C8A, 0X31F1B31C, 0XB03F5338, 0X3A3E70F0, 0X03BDA3D7,
            0X21507C16, 0X990FC0DC, 0XEC48EB1B, 0X6E5AA777, 0X9DC7E575, 0X0C9490FC,
            0XE8B70BB6, 0X9C2462DE, 0X58F9D6E2, 0X86C90D9E, 0X393954BD, 0XB5F2A4FD,
            0XA1CAD7C6, 0X6DEDFC47, 0X4664D285, 0X14E21038, 0XA34AE5A6, 0X0CC88295,
            0X26D74884, 0X885A7DAA, 0XAB0E25AA, 0XE328DACF, 0X3D75CA5C, 0X9315B071,
            0XA8F86A7A, 0X869A2A3B, 0X73C24496, 0X6E32834B, 0X247DEE3A, 0XB3A3E118,
            0X0E3E864B, 0X85639D62, 0X88B3363F, 0XB3A767E5, 0X4B847B5E, 0X39540816,
            0X7538DE97, 0X41B0D6D8, 0XED77D710, 0X7636B96C, 0XF57D4C5B, 0X2066FFB3,
            0X17877F49, 0XFF0478D2, 0X759AF12C, 0X0E64DCF8, 0X547B59F1, 0X27BCEC3D,
            0X18CE85B8, 0X8418FE14, 0XF07CF6B4, 0XA5827EC1, 0XED2893DE, 0X8A5FE68B,
            0X4E112D73, 0X47572CCB, 0XAF866780, 0X02E62D57, 0XE2994ED7, 0XB1C7EBA4,
            0X01AAD360, 0X3470F655, 0X8F1BB1A1, 0XE9FC7E99, 0X995672B0, 0XA2FA5702,
            0X15B4DE2A, 0X4F23088C, 0XF2F97EC9, 0X38568716, 0X61A4FFCC, 0XF419CF11,
            0XCCFACBCE, 0XBBCA28E3, 0X784DD43E, 0X1150DEE3, 0XBD060BA0, 0X8223C3D9,
            0X4BDA38C7, 0X8D9A7575, 0X4C007EC0, 0XAB58EFBB, 0X5CC287D0, 0XF064EA5C,
            0X85C0368A, 0XAF2AD213, 0X0EAAC3CD, 0XCE740241, 0XFB003622, 0XBFAA4ABB,
            0X583B5897, 0X62A96A1A, 0XD06C7F57, 0XFF53F144, 0XDD67F044, 0XD1C28282,
            0X8BDA0388, 0X548D04D4, 0X4E4DAB2D, 0XB00734EE, 0XD46E8408, 0X6EFCE2BD,
            0X39C9FB1B, 0X50898815, 0XC67E79C4, 0X9FDEDF05, 0X10DA0B2A, 0XF8B32839,
            0X06C91AF0, 0X7F24F3BC, 0XFB10760C, 0XB49F0850, 0XD2CC97D8, 0XEC63395B,
            0X9DB31D42, 0XA7CEC064, 0XFA0E398D, 0X479ACAB7, 0X07BE150A, 0X28F3754D,
            0X728C72A3, 0XF53F82D5, 0XBDEFD866, 0XBF22F70B, 0X655E9A03, 0XA6F11D63,
            0X4A7132F6, 0X93E833A5, 0X5E9274B4, 0X015F4E35, 0X6A59DCDD, 0X9D1E85EF,
            0X137D430A, 0XA6BE0B0F, 0X12A13EA3, 0X0191692D, 0X91A1E769, 0X1CC2852D,
            0XAEE7300F, 0XDAF3860E, 0X408AC32A, 0X6A50C876, 0X996E523B, 0X8C04F81B,
            0X417F8595, 0XAA4CC582, 0XFCB3B8E2, 0X3C2156FC, 0XCD71AECD, 0X32A95C70,
            0X7924389B, 0XD1047541, 0X9516C77F, 0X3DF7F5A6, 0XB1384D6F, 0XCB22F10B,
            0XBC73CA3B, 0X1EC4F4F4, 0XB9DEE6FB, 0X93A467F7, 0XD6382210, 0X89A1405C,
            0XFD2FB6A5, 0X4BC618B6, 0X96F3BB26, 0X7289FE18, 0XEB855796, 0XF09854D1,
            0XDC9E89FC, 0XAF106FDB, 0XF5A23857, 0X1B1815CA, 0X0A6F7CB5, 0X1513353F,
            0X8AC43941, 0XD1600967, 0XBA7A830A, 0XCD6CE82C, 0X29AB1461, 0XC4BE5ECF,
            0XBF756728, 0XEE1651D2, 0X8350FEF2, 0XD9A56503, 0X1160D3CC, 0XB0767848,
            0X82FA3272, 0X7DC7523B, 0X409D85E9, 0XF46167C9, 0XEF335BFE, 0XDE10E539,
            0X360295CD, 0X5E0F347A, 0X9DC0DA01, 0X42AC93FC, 0X32C3BEC9, 0X171678B9,
            0X4C78A82B, 0X7C2C748F, 0X3828095E, 0X064D62C9, 0XF49CB2BE, 0X9C9F0126,
            0X321485CB, 0X4773E463, 0X0E24D349, 0X1B7D32E8, 0X5D15EE76, 0XA962F764,
            0XDEB15D45, 0X74DB8D32, 0X099610F3, 0XB3BD25A7, 0X8A4A1E30, 0XE3A7F974,
            0X11B6004C, 0XDA44BF5E, 0X9848711F, 0X5104ADE1, 0X4A3B2AC8, 0XCF048420,
            0X2F073250, 0XBE5F1DCC, 0X59F58B34, 0XF5410B4B, 0X172EDC27, 0XC8B798C9,
            0XE7FBA7BE, 0XE8131C63, 0X3DA9D794, 0X4FA593B6, 0X684A0C6B, 0XEA248658,
            0X6A33F10A, 0X3A76F7C9, 0X490BCC01, 0X0090EDAC, 0X643FE36A, 0XA33A5490,
            0XA3D5F8B4, 0X8CF3FCE6, 0XF53EF834, 0X39DC6EED, 0XCB7A2AD7, 0X7357022B,
            0XBDA4E453, 0X8DB6C313, 0X88DF6453, 0XA5E9EA24, 0X5DC52D19, 0X8ABE6869,
            0X6BDB8D96, 0XE21B92AB, 0X8C3DB835, 0XFFCEDFCA, 0XAE947E3B, 0X49A2B4BD,
            0X298CCC36, 0XA3D7193B, 0X922D5A7E, 0XD0C5161D, 0XE4CD940B, 0XE06728C4,
            0XEF5CB80D, 0X23E73708, 0X29C4FD6F, 0X93F61230, 0X4E30CF05, 0X07C74C09,
            0XC04C1B3D, 0X943D5EC6, 0X03E12919, 0X45FDD157, 0X11348FB5, 0XCB36DBA1,
            0XC4FE6923, 0X24A33B0E, 0X499425F2, 0XFA87319C, 0X587D2E1D, 0XE3BF7A76,
            0X3D1A1D39, 0X600D94E4, 0X88019070, 0XC7BAEDFD, 0X13733CC1, 0X60299767,
            0XE3EDE116, 0X0BC75684, 0X44ABBD60, 0XA47D8E20, 0XC589A063, 0X3522CB00,
            0XE8781516, 0X4ACE93CC, 0X6B9E5D20, 0XA12BFE3D, 0X11371EEB, 0X584A4436,
            0XA6DF8D4B, 0XB44831C6, 0X852C8C2A, 0X711EB439, 0X6DB68C03, 0XA9FB89F3,
            0XFC170E64, 0XEA76B5B0, 0X8DBE0E5F, 0X805CAD36, 0X7530AC9C, 0X6CF68E35,
            0X891A3388, 0X14ED7939, 0XE8214B6B, 0XDB3206B1, 0XE4A66072, 0XC4497E62,
            0XFC14BB66, 0X7F4EC9A0, 0X5648857D, 0X9958EF6C, 0XCE2487DD, 0XB79E1FAC,
            0X49687EF7, 0XBFB13209, 0X72F4723C, 0XF6652529, 0XD291228D, 0X7308942B,
            0XF00DE97D, 0XE596928C, 0XF7017FC9, 0XA08BF910, 0X1AB9C115, 0X68F592BE,
            0XB48A4ECE, 0X91C1B9D0, 0X0BC340B1, 0X9ED82B04, 0X435D352B, 0X0BD8FCEF,
            0X3544FFDB, 0XB90F5CEE, 0XACB9B26C, 0X18141308, 0XF0D3923E, 0X920D0C84,
            0X67D95EEE, 0X3D2892EE, 0XCBBF9791, 0XDAC6ABFA, 0X2107CA17, 0XEEB2D41F,
            0X0A15B853, 0X6117F7F8, 0XE38EFD17, 0X847C5965, 0X299F4551, 0X28902084,
            0XE3C19C84, 0X2DA0FC7F, 0X43854235, 0X5030A02B, 0X09B20BFD, 0XA067ADC3,
            0X207E8E22, 0X96B7B8C3, 0XAE2034D1, 0X0DF42664, 0X8AEC6637, 0X4C6A4CAF,
            0X021C5E38, 0X2756DF1F, 0XDAB39789, 0X2E258D3F, 0XBBEB27F2, 0X593CA22C,
            0X02F53855, 0X7C761FBD, 0X5D1F9356, 0X5BD28C1D, 0XF93CE735, 0X99B8AA44,
            0X118489EF, 0X0E0ED804, 0X26E9A60F, 0XC55BA1A7, 0X2D592A94, 0X1EE1BBCA,
            0XF3E4EA86, 0XBB639898, 0X8A2C6F55, 0X94D4EF71, 0XD3DD68B3, 0XE2E12B5D,
            0XE3A3F757, 0XD7EE1599, 0XA4C0E18D, 0X9997F82D, 0XBD32A8C6, 0X83CB1B29,
            0XA059953A, 0X4F92D812, 0XBB2289A9, 0X855D888C, 0X677D6EF3, 0X41DA321A,
            0X2B4FFC49, 0XB1821BD2, 0X0257E7E2, 0X6F413397, 0XCB317288, 0X01CB390C,
            0X3CB685B2, 0X1CB3FBA1, 0X788DB8A1, 0X25D401BB, 0X63BFFA81, 0X12F19D42,
            0XA26082BE, 0X05E4E1AC, 0X2FA9937F, 0X2125AB76, 0XE5E315E2, 0X266C09BD,
            0XDC5B8B66, 0XD671F135, 0X7F354193, 0XFABCB03A, 0X3C9D682D, 0X7F698313,
            0X8BA04039, 0XFF140FDC, 0X312A0A39, 0X4E8C9048, 0X1A2290EC, 0XB9F91D01,
            0X28CD49E7, 0XAF451EC0, 0X0F6ADBDE, 0X5FFFC10A, 0XC53C8C75, 0XFA7DCF99,
            0X01FC98CC, 0XB44CA6F3, 0X6BD7A582, 0X09C968C0, 0XAC23BCFD, 0X1A4FA2E1,
            0X7FC86C6F, 0XB1B0E97C, 0X9ED901F6, 0X01EAF9F0, 0X95F1081A, 0X1BEBBF37,
            0XDB26CD0D, 0XA39B1F05, 0X4C6E73DF, 0X5FB3F0FA, 0X3EB86A19, 0X8B26131C,
            0XCAC55924, 0X22935EBD, 0X95EACD29, 0XBF617EFA, 0X2F41A05E, 0XFFE82B79,
            0XA86A40EF, 0X4867CAE7, 0X9C39B911, 0X7A125986, 0XE37D32CE, 0X39DBCB51,
            0X3F68378E, 0XB6844A13, 0X7CC5A27C, 0XA798F90C, 0X0620A803, 0X57EC10A5,
            0XEB8432E5, 0X703111DE, 0XE859F372, 0XBE354560, 0X82656F21, 0XA2C57145,
            0X14A9B7E1, 0XC553EA68, 0XD2D5DD6F, 0X9307BB8A, 0X14B71942, 0X07B5105C,
            0X8184D3C3, 0XA12DDC77, 0X519F2967, 0X3D8158CE, 0XB3C32CA3, 0X0F77E983,
            0X2128E5D7, 0XE296BBAA, 0XB3C36F10, 0X8C02701B, 0X79799E52, 0XE875F1CF,
            0XFADFFB02, 0X3A68E76C, 0XB092A17C, 0X4F389380, 0X26649815, 0X211577DA,
            0X64DF730E, 0X2B87A4FD, 0X1A5E4F14, 0X169CFCF2, 0XE076A65F, 0X976E635C,
            0XDCAD5793, 0X6E017E84, 0X2123F4AD, 0XCFE3E761, 0X7689CE9C, 0X7291B34A,
            0X3128D624, 0X9BFEF6AF, 0XED98745F, 0XAD9BCAA0, 0XE48850A3, 0X1635FB8B,
            0X06FD57BD, 0X0D326219, 0X1746DFA4, 0XE85901E7, 0XAE9D5A45, 0X33D88A6D,
            0X21EA7090, 0X2DE52E47, 0X711024D7, 0X735E27C4, 0X8348E17F, 0X014190E6,
            0XF6DF0D50, 0XC6700128, 0X5B70ECAB, 0XA6A01C98, 0X1114AF3E, 0X1DD46FD6,
            0X1E3C5682, 0X3076FA3D, 0X642F2EB5, 0XA7C7C625, 0X75655A99, 0XC51920CD,
            0XEFC5E07D, 0X1C996040, 0XE3048644, 0XEF5FC2BA, 0XF381235F, 0X5959D426,
            0XB1485DBB, 0XF14BB82B, 0X340CA2AB, 0X7E8C3151, 0X5901BB9D, 0XD8C93107,
            0X1693701C, 0X2F0FD38A, 0X2265D674, 0XECC395FB, 0XF951CBE7, 0X4CDE4AF9,
            0X16DE85E3, 0XE0CB3310, 0X8B16C014, 0X3A0106FF, 0XF125B5B3, 0XCB45F407,
            0X79E7389F, 0X5CD3A367, 0X5A80B1E4, 0XEDB17199, 0X436EA05A, 0X3E377949,
            0X3A3D4ECD, 0XE00B34A0, 0XFFA49567, 0XF668FA93, 0X36BCAE22, 0X01E1C17C,
            0XEAC3650F, 0X973AD8D5, 0X430DBB8D, 0X04F92104, 0X5641EDCE, 0X3AC269FB,
            0X786AFF70, 0X2A2CACB4, 0XF6228018, 0XEEB3E205, 0X5223B6B8, 0X84DA7B93,
            0XF69CB172, 0X5661CED8, 0X52D65674, 0XBB06447D, 0X10D97688, 0X4A4D4E2E,
            0X85562963, 0XAFB8FD77, 0X3EB067C6, 0X2ECCB316, 0XB715B82C, 0X4CD5704B,
            0XFC48C951, 0X5A696AAA, 0X91CA3A2F, 0XC6C97B48, 0X1E1227EE, 0XEA5AAE0F,
            0X1FCE1B1B, 0X0149C631, 0XFDD8AFD9, 0XF6466639, 0X645338F3, 0XEB8392C8,
            0X3318915B, 0X53748398, 0XBB711937, 0XAFAB09E5, 0X5FC32FF1, 0XB3C1FE1D,
            0XACA39DBE, 0X6F87B608, 0XBED2B1B1, 0XC036C554, 0X22DAAF24, 0XCAF4F53D,
            0XF854E55A, 0X212471D9, 0X7D2D0777, 0X9B25563B, 0X85ED851C, 0XDC95DBE4,
            0X6FF96616, 0X2C13E934, 0X0886BA4D, 0X85F776EC, 0X4FC3757C, 0XCC791C7D,
            0X67171D83, 0XFE93E855, 0X650428C5, 0XA5D69909, 0X1A4AF2BC, 0X95B74227,
            0X26AE05E9, 0X37CC6E58, 0XB6EBF6A6, 0X79FC9DBC, 0X6A289F83, 0X1DB090A3,
            0XFED906D8, 0X873153D8, 0X8D17068C, 0X2FCB255D, 0X9CE6F363, 0X22E5F0E9,
            0X99505EC4, 0X777D1D28, 0XCEA31A15, 0XFC3F4432, 0X40EF079C, 0X4F26C32B,
            0XF9C2CB89, 0XF0B40E03, 0X4F10DBC4, 0XBC83DE6D, 0XE34AE5CB, 0X8798EC34,
            0X632D8651, 0XCC6CAF6B, 0XCE4797BD, 0X98CA8826, 0XC28D82ED, 0XC7BCD3B2,
            0X2AFB56FF, 0XB2280BF9, 0X0FAA53BA, 0X70BB13F1, 0XB88C9BEE, 0X75F865DB,
            0X65B97476, 0X00C27A47, 0X7147367E, 0X52B391D3, 0X9A10C632, 0X2889967A,
            0XD667521F, 0XE7E68D9F, 0X41B14D50, 0X5D608D8A, 0X2A8D5EE4, 0X72197B7A,
            0X9E0D40E0, 0XB7D84D86, 0X8FAEF64A, 0X9F40B830, 0X085A45BF, 0X37C66777,
            0XDD26FE46, 0X494978CD, 0XC336AC13, 0X6D0EF2D0, 0X93D63D52, 0X4059298F,
            0X758E39DE, 0XB59FB07A, 0X9F5087D9, 0X7A5ABFA6, 0XEA894501, 0X59E9B257,
            0X0B810916, 0X56CF23AC, 0X8BDD7C94, 0X76FA3428, 0X0CD33C02, 0X749D58A8,
            0XC14D4DCE, 0X4D984D74, 0XBCEA2DF9, 0XBA5EE881, 0XFDFB1D43, 0XFA94D0CA,
            0XEC038FBE, 0X3F78E4BC, 0X0C83727C, 0X60A40C3B, 0XB60283FD, 0X1A1F7DF8,
            0X83647DDF, 0X5A6EA43A, 0X45E2C5FA, 0X1164677D, 0X12C22422, 0X92D83289,
            0X67C64BB1, 0X516CF2FD, 0XDDFC03FA, 0X52D573DD, 0XF2DA185F, 0X6FCEF553,
            0X280C9FAE, 0X8BEBE1C3, 0X5C4648C6, 0XAC8E2156, 0X39F3ACDD, 0XAAFF23EC,
            0X426570EE, 0XFF59D494, 0X19C3BE0B, 0XD6F859FB, 0X23CE1087, 0X1775DA1A,
            0XBA648A66, 0XCCC808C4, 0X51BE41EA, 0X51A28FD8, 0X34DF5E93, 0X8481F74F,
            0X6100816D, 0X3340A466, 0X70548249, 0XC75E5120, 0XBA797022, 0X79A00748,
            0X6F067133, 0XE39C6F68, 0XD4A56F6D, 0XE85BF670, 0X9BC03ABA, 0XA6FC1A71,
            0X78962179, 0X52937711, 0X04CF9FD6, 0XC613F747, 0XADB4E5E4, 0X4BD90F88,
            0X994FD52D, 0XF174D699, 0X30042813, 0X012C0114, 0XF26207D0, 0X2A6E2994,
            0XD01EA8CA, 0X8B4289E4, 0X288B2E9F, 0XB77EC8C2, 0X062AB5EF, 0X441C44B9,
            0X023017B2, 0X4D33E3F7, 0XC9C54912, 0X6B629FC5, 0X13D2028D, 0X708FFC38,
            0X99BF4A68, 0X002FA9F9, 0X959B2BDB, 0XBF79C584, 0X2A6AE3A9, 0XAF0DEF7F,
            0X3961DFF9, 0X4E0F2FC3, 0X375602F6, 0XCB38090E, 0XFF27FA5F, 0XB4361DAD,
            0X27F105C6, 0XFF7A86A7, 0X89C6A294, 0X797B99FD, 0X859C810D, 0X3E650654,
            0XCD5FAEBD, 0XAA91E7A4, 0X80B70152, 0X513A0E3B, 0XF3D5225D, 0X6212305A,
            0X0B2E2D04, 0XD6E0A998, 0XBC00734C, 0XB44E2BC4, 0XDF6923BF, 0X27418C14,
            0X6B0D8E79, 0XBBC2202C, 0X4F5354EC, 0XCF70BFBD, 0X3004547D, 0XA9FC32F9,
            0X284A7E7F, 0X49AB8971, 0X7C4C5273, 0X348AECA7, 0X4AF7B456, 0X6A7D274F,
            0X41144E72, 0XC6576B5E, 0X94DE31E8, 0X8FFF2C89, 0XC4B22594, 0XD0138A97,
            0X63EFE7A4, 0X53EA6DDF, 0XB611ECB4, 0X722FE373, 0XF819C4B8, 0X8FC3DF60,
            0X93E879D9, 0X871E50B2, 0X0AB6063F, 0XF823AB24, 0X1D753E36, 0X002FE0A2,
            0X59155829, 0XA234E540, 0X2A3A5EF6, 0X06E16C73, 0X398EED50, 0X2BA793DF,
            0XA2E4CD3D, 0X50E7C902, 0X455226EE, 0X9CC01966, 0XE783C5FA, 0XA4A03BB8,
            0XE627076A, 0X6A926733, 0X7ECFF39F, 0X7A1F3091, 0X0CFB8FC6, 0X22B3ED44,
            0X3BF28732, 0X7CC97704, 0X16588EBC, 0X87273BFD, 0X23AD2E3D, 0X79DC9FA4,
            0X6F33F954, 0XDC3DDFAA, 0X8855135E, 0X2935EF4E, 0X980A08E4, 0XCADE1B0B,
            0X0AE829C4, 0XB9832D25, 0X7E26508C, 0XB0E1D951, 0X014E05A1, 0XEFEF032A,
            0X7D73E257, 0XF4E46436, 0X3EDDB5EA, 0XBF92518C, 0XBEB2E77D, 0XE87FBEA2,
            0XE774B1C8, 0X7370FA54, 0X8212C2D3, 0XFD68BCD3, 0X80FDFEBF, 0X5965C349,
            0X36E0BE29, 0X8259B3C2, 0X7900B71C, 0X3BBDE591, 0X4BE48027, 0XCBABC230,
            0X9AB8623D, 0X10F1DDB8, 0X67353FE7, 0X4B23E082, 0X14D19143, 0XCD01BBD9,
            0X9B8F27FE, 0XE6873317, 0XA90F9F28, 0XBE002243, 0X95E3326A, 0X1A5D0985,
            0XE9CDFC8A, 0X83BB7D8B, 0XDD5BDCBF, 0XB6238048, 0XAC5DB086, 0X974C4A25,
            0X3138A84A, 0X6EE55DF9, 0XB6AAFF87, 0XD1AAAB74, 0X7D882D01, 0XEAC51639,
            0XB1D78670, 0X8070B049, 0X2B2D6ACB, 0XBE60CA03, 0X7E9FB44B, 0X03BB7CDD,
            0XD46CD6E2, 0XB7355F16, 0X28189952, 0XE0F24EF1, 0XAB1BB900, 0XC9ED265C,
            0XE2D04CF2, 0X396E9E95, 0XE90B7C2B, 0XC71EDFBF, 0X2BFD0239, 0XBCAA1AE2,
            0XD5A67AC7, 0X5D09E06C, 0X1042C991, 0X4BD7A768, 0XB95D116A, 0X50577DF5,
            0X4D5BA7FD, 0X9302A958, 0X10EFB35D, 0X7C44D04C, 0X2840CD3B, 0XBFE8A000,
            0X6E1D0B91, 0XBF83166F, 0XC94BEADC, 0XE2A22661, 0X29F3DEC6, 0X6D94A52B,
            0X6DE8D825, 0X98C80D5A, 0XDBA35D1E, 0X9FC9976E, 0X70C6F78C, 0XCB1DC1AC,
            0X5F89D50A, 0X1A0F5014, 0X89BA6ABE, 0X2675A341, 0X2E91CA2D, 0X639705C7,
            0X0A1E10F5, 0XECB1CDF8, 0XC6F4D4C7, 0X6CA28E32, 0X6C1F1960, 0XE1FFBA3D,
            0XFDABA7B7, 0X49417CCB, 0X2EBE5734, 0XF41BB7B6, 0XFF1B3883, 0XF1C9AB13,
            0XD2BB1965, 0X66A38DFA, 0X7B512382, 0X658E0EA5, 0X935BB5D4, 0XA12A9BF7,
            0X960FBAA2, 0X555C0B70, 0X3E525A53, 0XAED652B2, 0XB3921818, 0X88F09E91,
            0XEB9C20C7, 0X852CB5B6, 0XFE412D51, 0X2E5FC6F7, 0XFCE8C877, 0XAEBF0456,
            0X64E55438, 0X4FAE86D3, 0X3F7FCB2D, 0X2961457A, 0XEAAA1911, 0XB7B127B4,
            0XFC0705A2, 0X2D459DC0, 0XE1BDFA1C, 0X0BFDEE98, 0XF87B87A9, 0XF83C326A,
            0X5EF3FBCD, 0XA686CCD5, 0X3A606210, 0X9261F2CB, 0X6DE5ADF3, 0X9C432638,
            0XD3E5B242, 0X1AA14DF5, 0XB8C3E2A4, 0X8D04B5AB, 0X353AD325, 0X6B300551,
            0X2C293E7B, 0X5CD65ED1, 0XD1424A12, 0X5365A941, 0X2D7DABF9, 0XA99A9EF0,
            0XA22E73F4, 0X144C14B0, 0XB28D10B4, 0XDAEDEACE, 0XED1C6748, 0X02891AF1,
            0X97086B10, 0X18A4CF83, 0XE2BFABED, 0X37127735, 0X02F6EA6E, 0XE53CEE62,
            0XABD1EE13, 0XE70FB008, 0XC74EF42B, 0X9A66ADC1, 0XB37D68BD, 0X31CF57BA,
            0X50FE1D7E, 0X33412595, 0X5E1D0F55, 0XFF19FA60, 0X60BC42EF, 0X8A205D65,
            0XF6C988FE, 0X294D1666, 0X57FBD06F, 0X63EB46E3, 0X6EF46444, 0XA4CDBE82,
            0X8B526472, 0X8BD852F1, 0XBCAE0DB7, 0XDD7356F2, 0XA668BEA6, 0XE240D70C,
            0X3B57508C, 0XB52C4041, 0X896E3997, 0X98C84992, 0X55762FF1, 0X07ED577E,
            0X594A7E2F, 0XBCB2EB8F, 0X9AEBC80F, 0X2B38F26A, 0X43E6DD99, 0X3FE053CB,
            0XBD77A7E5, 0X122AEAAD, 0XE7928B16, 0XD1212579, 0X095BD76F, 0X6E364AE7,
            0X45C5C8EC, 0X7B9A739E, 0X192B0002, 0X7D4F1F15, 0XC7370445, 0XFF3569DA,
            0X4D89F2C8, 0X2087874D, 0X3001B7CA, 0XB20DC804, 0X8E85FFCF, 0X7DE4AB5D,
            0X3BA794F5, 0X5A19ADE7, 0X1D485BEB, 0XF50C76DA, 0XE937C235, 0X4A69FF66,
            0X65B0FDC5, 0XE27F9505, 0XFDEC5B57, 0X07A41CB5, 0X56226E58, 0XF0342F9D,
            0XE47B2922, 0X5D24BE40, 0X0708B058, 0X2DA0D569, 0XCAEACAFB, 0X626D88B6,
            0XD9A23DDA, 0XFC49DE6C, 0X0E54F8C2, 0X88AE7A36, 0X5A16100C, 0XF86D7CA0,
            0X1B400779, 0XB429DCFF, 0XFFDB45E8, 0XFE03B385, 0X55883F5A, 0X18C4C190,
            0X36080E4D, 0XE983C048, 0XA7619E4D, 0X5D7023BA, 0XEA1B4448, 0XFAE19DF1,
            0X920A7A62, 0XFF9BE5DA, 0X8D630C91, 0X3A8457B3, 0XC1317AAD, 0X19B125E4,
            0X2AC60DA8, 0X5EF6A4FC, 0X18453D57, 0XCBE16E34, 0X5B3E0DC1, 0X84E910D3,
            0X5989E958, 0XB02A738C, 0XA76A2134, 0X2AE3153D, 0X6C9A6DA3, 0XA6B590C3,
            0X9294F2B2, 0X61FFD9FC, 0X5DC7ABBC, 0X0A085E11, 0X718F3BE6, 0XFD0598BF,
            0X8552331C, 0XA17183EC, 0XC702CAA9, 0X151C171F, 0X02A6E9CD, 0X28FC2637,
            0X1D79CE9F, 0XCA06C85D, 0XF990DF8D, 0X4704243D, 0X4A5C1F56, 0XFE965B3C,
            0X603347AD, 0XDC37A650, 0X1CAE34EB, 0X5EBB9A97, 0X137D411F, 0X4DEFE9FE,
            0X8B1E6D8B, 0X9D92A7DD, 0X5888051B, 0XBD7DE708, 0X2A05F513, 0XCD02F32D,
            0XF37A6090, 0X024DF9AA, 0X3E9D2A7E, 0X829CFDF2, 0X61D25546, 0X792B1059,
            0X1B042CAB, 0XCC51561C, 0XBA6A92F3, 0XC9C23431, 0XDAFA0C01, 0X2658242F,
            0X15388A8C, 0X97D1C6E1, 0X1D75A986, 0X270AE314, 0X00AD6269, 0XF740DAF5,
            0XE11ACD26, 0X29ED5C7D, 0X78B8E955, 0X13F8D4C2, 0X9B421645, 0X5EB07F9E,
            0XDE96E41B, 0X398E740F, 0X47F4DBAA, 0X6AF2216B, 0XE324E52E, 0XD534622F,
            0XBFA0F89B, 0X7AF36FA7, 0XAD459D48, 0X46671973, 0XBC8C0111, 0XA08779BF,
            0XBF7E8F32, 0XF914239A, 0X7C039FA6, 0X8DCBCC5C, 0XB2C77934, 0XF9D19EE2,
            0X2014EFF9, 0X7BF6F383, 0X18A1E15B, 0X762D0A76, 0XAB976718, 0X44F7D0F7,
            0XD900ED19, 0XF558726F, 0XC40702BE, 0XFDF81427, 0X3C04AD1A, 0XA20E9FEC,
            0XA5994E7F, 0X4FAE1300, 0XC30D8C95, 0X5DFFC1E9, 0X28B67F51, 0X321D79A4,
            0X80805CDD, 0XCAAC217A, 0XC450000E, 0X76A4C407, 0XE6B11477, 0XFB29BA1F,
            0XB6117B2E, 0XDB67EFDF, 0X90919CF5, 0XF2402660, 0X870990DE, 0XE6953D45,
            0X59DCA2BB, 0XE1D1EFE0, 0X1AFC0232, 0X1CB98FBD, 0X4D64D3E1, 0X4F230A06,
            0X6711320E, 0XA8A9F71A, 0XB3047218, 0X3291CE32, 0X50E85B55, 0X6358D19B,
            0X75574349, 0XC061908A, 0XD7FD1AA7, 0XE4FC7A61, 0XC01E9492, 0XFB30E932,
            0X8EE6D89F, 0XAA3D9A2E, 0XF8B5C1B7, 0XC0B0BA37, 0XD81FDFDD, 0X54EB3270,
            0X9CD27406, 0XEB1FF9F7, 0X338CAE31, 0XF8B82E2F, 0X85FD727A, 0XB033FA40,
            0XD701FBCB, 0XB7403203, 0XDE77DD60, 0XD4423BA3, 0X4C85C951, 0X8E850016,
            0X7A70931F, 0XEE8600A5, 0XADBBA019, 0X7CD52986, 0X626263A3, 0XB381D4D1,
            0X28913CD0, 0X12DA73DA, 0X6B41DD34, 0XC1ADA2FB, 0X8D97DA19, 0XB167ED9B,
            0XB4812D4C, 0X5BB6CDA7, 0X669C5EB0, 0XAB412ED2, 0XD3C0D382, 0X80BCADE4,
            0X961F99BE, 0X007375C9, 0XE1CD3F0D, 0X18427E6B, 0X2F8E1F31, 0XAD07916B,
            0X0BCB4590, 0X4214A966, 0X080DEA4F, 0XE4402AB8, 0X3164DA2C, 0X4EC6D4B3,
            0XEC1AB3E0, 0X371AA403, 0X703CC4A2, 0XD61C9EAF, 0XDF938277, 0XB360CC64,
            0XA809622E, 0XD1CA223A, 0X0D0C41C6, 0X1FC1CB73, 0X6B1D07D0, 0XF7631F64,
            0XCD6C472B, 0X23716169, 0X7C547D10, 0X1DE31920, 0XB8AA5D5D, 0X5A08B84D,
            0X8783FA26, 0X8475EEC3, 0X4AD24805, 0XDEA948D4, 0XEFD4680D, 0XE1082145,
            0X1F410A6F, 0X5CB25D7B, 0X5830BAE8, 0XDFC1B3DD, 0XA52EEAC3, 0X9FA9E4E6,
            0XE780295A, 0XA1FDA9CC, 0X05292076, 0X633BD6C1, 0X84F45286, 0X3BCCD3F0,
            0X0C0FFA13, 0XA48AC0E7, 0XC10B071D, 0X8F38B069, 0XFC797F14, 0X0A0C843B,
            0X55B2102F, 0X2B6F2CBA, 0X6A65ABF4, 0XBC13F3D5, 0X7AB981E9, 0XED36BC8A,
            0X01590DED, 0XE28853A9, 0X880A305A, 0X45927BB5, 0XAD60BEC2, 0X758C9434,
            0X4F5CC2D0, 0X842FFFA1, 0XB56BC910, 0X589D9119, 0X29510482, 0XF6B85BCB,
            0X191C5E8C, 0X0AAC8F1D, 0X53AEE004, 0XB3A760B2, 0X6C47171A, 0XE122EE50,
            0X8F882588, 0XC3AF791D, 0X3AB1E787, 0X787F23A2, 0X740A3D69, 0XF574F889,
            0X563A7542, 0XEF0275A9, 0X1D4C7F02, 0X88B0F4BD, 0X0B6A0955, 0X05C57B60,
            0XFCDC13AC, 0X38250CC2, 0X7C0F6DD8, 0XFEE40397, 0X75D040BD, 0X4F8C08B0,
            0XDA40BCD1, 0XAB461EA7, 0X0BB2664F, 0XB361B106, 0XFF88C17C, 0X7ECBBDF3,
            0XCB397F5A, 0X34BD8C06, 0X2C79097E, 0X71DC4099, 0X0C7E2874, 0X3703E385,
            0X6B4E04AB, 0X3244D2E0, 0X7FB8C9F3, 0X8282173F, 0X21AFABC5, 0XCA89F8C3,
            0X3AA25BFA, 0XE9E1B88B, 0X77E8C0B8, 0X88B0B2EE, 0X8D7E9922, 0X0B214D8B,
            0XE4C85444, 0XB026A4F2, 0XF29A85E1, 0X881A45A5, 0X73105CDE, 0XBCF4939A,
            0X6B923A2F, 0XFAA6D9CD, 0X44EB8BB4, 0X794D87DF, 0X0A60094B, 0X3CB6F83C,
            0X03661679, 0XA1F217E8, 0X963C57F0, 0X455BA773, 0X48ED66F3, 0X6494C7AA,
            0X0B20EAFD, 0X85EB9191, 0X1C890980, 0XEFA34C0D, 0XBDA11E82, 0X5B6095DB,
            0X3E193DB7, 0XCE3E5F19, 0XD52A1E34, 0X77B0CC82, 0X489DB038, 0X38376CC8,
            0X3CEF20B0, 0XBC9F84E9, 0X70CB1448, 0X0EC62200, 0X246227A4, 0XA55EE063,
            0X7AF69EB0, 0X3F5EA747, 0X39FA8765, 0X9196B7F3, 0X81ECEEFE, 0X543BB263,
            0X041009D0, 0XCF373731, 0X62836B24, 0XEEC15E94, 0XB498922D, 0XBAB7E562,
            0XB8A4FCA9, 0X4750926A, 0X880C3467, 0X8827F078, 0XD9ADAD0A, 0X8D1D0854,
            0X6F305470, 0X2D3DE155, 0XFFF92A2D, 0XA11FD9B0, 0X6B012A4C, 0X96009615,
            0X95BD42D4, 0XCA1FF867, 0XB1B1B706, 0XA1B652C4, 0X606C1C06, 0X836140CC,
            0X687393E9, 0X571F598B, 0X7FB3189D, 0X01008403, 0X196DC6E3, 0X09DD3F96,
            0X2EE2504E, 0X4FA033AF, 0X656EDD9C, 0X1C2898DA, 0X1CF705B8, 0XEBE7ED56,
            0XA335F9DE, 0X920E0456, 0X176E632D, 0X59157144, 0X37B8036F, 0XBDE47E04,
            0X8DB69C25, 0X5B58351D, 0X75E3AD18, 0XFA15C435, 0XB88F8FA7, 0X9E7ACD2E,
            0XF4F1ADB2, 0X2C44430A, 0XA6F667B7, 0X787DE551, 0X7F5A7205, 0XAAB32994,
            0X41589499, 0X6FFDADD7, 0X0066BB6C, 0XDDC58D69, 0X73355DBC, 0XC89631CF,
            0X4431FD49, 0X9E8875DB, 0X497D7F92, 0XA785C0A1, 0X9E125995, 0X7CD82824,
            0X06AA4F3F, 0XE70CA2A2, 0X2089374C, 0X701AD9E5, 0X9232A152, 0XF12FA6F5,
            0X8642D5B1, 0XE978751D, 0XB983D466, 0X746FC062, 0XB927B4CD, 0XD4A40163,
            0XD318EFA7, 0X2D4E8E2C, 0X0739C2B1, 0X35066E85, 0X288D2F5E, 0XC554BB59,
            0XE932090E, 0X1594B11D, 0X99AAE934, 0X39757411, 0XB6355EBE, 0X7352D0D5,
            0XC55036D0, 0X33D4CE1A, 0XCF62E455, 0X765770ED, 0XD35B32D0, 0X879CEC65,
            0X4A7F75A9, 0X1E55A387, 0XDBA77CCE, 0X6BBA86C5, 0XA5BD4045, 0X3312CC34,
            0XC873CF4A, 0XD2B21BDA, 0XFB57ACBB, 0XFFF82A86, 0X54853294, 0X1E5C97F5,
            0XC66A0BF8, 0XE8A5EBA2, 0X4263CE77, 0XF7EB6DE5, 0X2E8A6099, 0XFB9CB50C,
            0X1D45AB61, 0X11B0DCB0, 0X7FE52FF3, 0X00874786, 0X595B7D86, 0XEA04E95F,
            0X02670CBA, 0X727270DC, 0XDA2647DC, 0XAC755BCC, 0X58720029, 0X6A36C48A,
            0XDCB2C01C, 0X8B852F55, 0X94375118, 0X67ECA888, 0XDA15A6EB, 0XE12F1ACA,
            0X6BB01516, 0XC79BA56C, 0X59D55126, 0X50DA85FE, 0X2508641F, 0X00EFB3D8,
            0X10828648, 0X80F8737B, 0XB353426A, 0X76C9620F, 0X1133CD70, 0X565B0C38,
            0X4757F74C, 0X3AE9A9C7, 0X3C3158E9, 0X34173FD8, 0X932EAB7F, 0XF21856F6,
            0XEE6E48FA, 0X9C5D22BB, 0XF0D5647D, 0XA187773A, 0X12D8F8D9, 0X175D50B5,
            0XCC1D89F2, 0X6CA5F76B, 0XAD350118, 0X288382EF, 0X2E8209A9, 0X8951707A,
            0X429AC0E0, 0X6E896040, 0X1FA39EAB, 0X38C766F8, 0X0DB3875C, 0X9089C512,
            0XD833C218, 0XB2296004, 0X51D02237, 0X5837CDA6, 0XB197EFD3, 0X310610EC,
            0X96D9426A, 0X03DD99F1, 0XA668A96A, 0X49BD5595, 0X88B9C5A4, 0X82DEF3CF,
            0XCE29AA11, 0X23CE0CCE, 0XE8C5D1BE, 0XDFEB8F4C, 0X9FD5C941, 0XFA43F815,
            0X71403B03, 0X5037F8D6, 0XF9698577, 0X1B6CAEF5, 0XB0CEAEF1, 0X407FA726,
            0XDAE80323, 0XBC5687EE, 0XE766D913, 0X50438AB1, 0X83352D63, 0X17D820D4,
            0X471FAF84, 0XD19B9D6B, 0XB68B6F05, 0XC551787A, 0X0D82CB9A, 0X2FD0ED0A,
            0X9C9FA69B, 0X835533CF, 0X529708C8, 0XB631A586, 0XAE6E7D9A, 0X9A021C8D,
            0X3776E16D, 0X46423ABD, 0XE26768F2, 0X56FA285A, 0XD1064D1D, 0X8071EC0B,
            0X87DD00CA, 0X296EC314, 0X55664BAA, 0X77126B71, 0X84923CEA, 0X48B80A5D,
            0XCEEF0FB7, 0XCDBE63E8, 0XEE9CD1F8, 0XF1BA69D1, 0X630CB18D, 0XCEF9F6D6,
            0X9ACCCFEC, 0X1E5C0B8B, 0XA7C603D6, 0XC1771990, 0X8D8CFCA1, 0X25F0FC18,
            0X21B4040B, 0X45983A58, 0X779277D3, 0X7F6F40B7, 0XE00E05C7, 0X0D0DD723,
            0X2E06042A, 0X483503D1, 0X11E6C759, 0X4E2D37BC, 0XB05774BB, 0X3125D878,
            0XF2F37B26, 0XD9686660
    };
}
